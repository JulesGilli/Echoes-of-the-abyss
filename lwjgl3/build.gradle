buildscript {
  repositories {
    gradlePluginPortal()
  }
  dependencies {
    classpath "io.github.fourlastor:construo:1.4.2"
    if(enableGraalNative == 'true') {
      classpath "org.graalvm.buildtools.native:org.graalvm.buildtools.native.gradle.plugin:0.9.28"
    }
  }
}

plugins {
  id 'java'
  id 'application'
}

apply plugin: 'io.github.fourlastor.construo'

sourceSets.main.resources.srcDirs += [ rootProject.file('assets').path ]
mainClassName = 'io.github.maingame.lwjgl3.Lwjgl3Launcher'
application.setMainClass(mainClassName)
eclipse.project.name = appName + '-lwjgl3'
java.sourceCompatibility = 11
java.targetCompatibility = 11
if (JavaVersion.current().isJava9Compatible()) {
  compileJava.options.release.set(11)
}

dependencies {
  implementation "com.badlogicgames.gdx-controllers:gdx-controllers-desktop:$gdxControllersVersion"
  implementation "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
  implementation "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-desktop"
  implementation "com.badlogicgames.gdx:gdx-bullet-platform:$gdxVersion:natives-desktop"
  implementation "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-desktop"
  implementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
  implementation project(':core')
  implementation("com.badlogicgames.gdx:gdx-tools:$gdxVersion") {
    exclude group: 'com.badlogicgames.gdx', module: 'gdx-backend-lwjgl'
  }

  if(enableGraalNative == 'true') {
    implementation "io.github.berstanio:gdx-svmhelper-backend-lwjgl3:$graalHelperVersion"
    implementation "io.github.berstanio:gdx-svmhelper-extension-box2d:$graalHelperVersion"
    implementation "io.github.berstanio:gdx-svmhelper-extension-bullet:$graalHelperVersion"
    implementation "io.github.berstanio:gdx-svmhelper-extension-freetype:$graalHelperVersion"
  }
}

run {
  workingDir = rootProject.file('.').path
  setIgnoreExitValue(true)

  def os = System.properties['os.name'].toLowerCase()
  if (os.contains('mac')) jvmArgs += "-XstartOnFirstThread"
}

application {
  mainClass = 'io.github.maingame.lwjgl3.Lwjgl3Launcher'
}

jar {
  archiveFileName = "JavaProject.jar"
  manifest {
    attributes(
      'Main-Class': application.mainClass.get()
    )
  }
  from {
    configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
  }
  from {
    fileTree(dir: "${rootProject.projectDir}/assets", include: "**/*")
  }
  duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

tasks.named('jar') {
  dependsOn(':core:jar')
}

distributions {
  main {
    contents {
      from("${rootProject.projectDir}/assets") {
        into "assets"
      }
    }
  }
}

startScripts.dependsOn(':lwjgl3:jar')
startScripts.classpath = project.tasks.jar.outputs.files

if(enableGraalNative == 'true') {
  apply from: file("nativeimage.gradle")
}
